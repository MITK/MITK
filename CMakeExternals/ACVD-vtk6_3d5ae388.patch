diff --git a/ACVDConfig.cmake.in b/ACVDConfig.cmake.in
index 14480ee..3cb33e4 100644
--- a/ACVDConfig.cmake.in
+++ b/ACVDConfig.cmake.in
@@ -5,19 +5,19 @@ get_filename_component( ACVD_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH )
 set( ACVD_INCLUDE_DIRS "@CONF_INCLUDE_DIRS@" )
 
 # Our library dependencies (contains definitions for IMPORTED targets)
-if(NOT TARGET ACVD_core AND NOT ACVD_BINARY_DIR)
+if(NOT TARGET vtkSurface AND NOT ACVD_BINARY_DIR)
   include("${ACVD_CMAKE_DIR}/ACVDTargets.cmake")
 endif()
 
-set( BUILD_SHARED_LIBS @BUILD_SHARED_LIBS@ )
-set( BUILD_DISCRETEREMESHING @BUILD_DISCRETEREMESHING@ )
-set( BUILD_VOLUMEPROCESSING @BUILD_VOLUMEPROCESSING@ )
-set( USE_MULTITHREADING @USE_MULTITHREADING@ )
-set( USE_LLOYDCLUSTERING @USE_LLOYDCLUSTERING@ )
+set( ACVD_BUILD_SHARED_LIBS @BUILD_SHARED_LIBS@ )
+set( ACVD_BUILD_DISCRETEREMESHING @BUILD_DISCRETEREMESHING@ )
+set( ACVD_BUILD_VOLUMEPROCESSING @BUILD_VOLUMEPROCESSING@ )
+set( ACVD_USE_MULTITHREADING @USE_MULTITHREADING@ )
+set( ACVD_USE_LLOYDCLUSTERING @USE_LLOYDCLUSTERING@ )
 
 set( VTK_DIR @VTK_DIR@ )
 find_package( VTK )
 
 set( ACVD_LIBRARIES "@ACVD_LIBRARIES@" )
 
-include_directories( ${ACVD_INCLUDE_DIRS} )
+# include_directories( ${ACVD_INCLUDE_DIRS} )
diff --git a/CMakeLists.txt b/CMakeLists.txt
index f31a2df..c43abe0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,6 @@
 project(ACVD)
 
-cmake_minimum_required(VERSION 2.8.7)
+cmake_minimum_required(VERSION 2.8.12)
 
 if( POLICY CMP0042 )
   cmake_policy( SET CMP0042 NEW )
@@ -22,16 +22,21 @@ set(INSTALL_INCLUDE_DIR include CACHE PATH "Installation directory for header fi
 set(INSTALL_DOC_DIR share/doc/ACVD CACHE PATH "Installation directory for html doc" )
 set(INSTALL_CMAKE_DIR lib/cmake/ACVD CACHE PATH "Installation directory for CMake files" )
 
-# Make relative paths absolute (needed later on)
-foreach(p LIB BIN INCLUDE CMAKE)
-  set(var INSTALL_${p}_DIR)
-  if(NOT IS_ABSOLUTE "${${var}}")
-    set(${var} "${CMAKE_INSTALL_PREFIX}/${${var}}")
-  endif()
-endforeach()
-
 # find_package
-find_package(VTK REQUIRED NO_MODULE)
+set(ACVD_VTK_COMPONENTS
+  vtkRenderingFreeType
+  vtkRenderingLabel
+  vtkFiltersHybrid
+  vtkFiltersVerdict
+  vtkInteractionStyle
+  vtkIOXML
+  vtkIOPLY
+  vtkIOGeometry
+  vtkIOExport
+  vtkIOImport
+  vtkIOLegacy
+)
+find_package(VTK COMPONENTS ${ACVD_VTK_COMPONENTS} REQUIRED NO_MODULE)
 include(${VTK_USE_FILE})
 
 option(BUILD_SHARED_LIBS "Build vtkSurface with shared libraries." ON)
@@ -72,7 +77,7 @@ if(BUILD_VOLUMEPROCESSING)
     set( ACVD_LIBRARIES ${ACVD_LIBRARIES} vtkVolumeProcessing )
 endif(BUILD_VOLUMEPROCESSING)
 
-export( TARGETS ${_targets}
+export(EXPORT ACVDTargets
   FILE "${ACVD_BINARY_DIR}/ACVDTargets.cmake"
 )
 
@@ -98,20 +103,21 @@ configure_file( ${ACVD_SOURCE_DIR}/ACVDConfig.cmake.in
   ${ACVD_BINARY_DIR}/ACVDConfig.cmake
   @ONLY
 )
+
 # for the install tree
-file(RELATIVE_PATH REL_INCLUDE_DIR "${INSTALL_CMAKE_DIR}"
-   "${INSTALL_INCLUDE_DIR}")
+#file(RELATIVE_PATH REL_INCLUDE_DIR "${INSTALL_CMAKE_DIR}"
+#   "${INSTALL_INCLUDE_DIR}")
 
-set( CONF_INCLUDE_DIRS
-  "\${ACVD_CMAKE_DIR}/${REL_INCLUDE_DIR}/ACVD/Common"
-)
-if( BUILD_DISCRETEREMESHING )
-  set( CONF_INCLUDE_DIRS "${CONF_INCLUDE_DIRS}" "\${ACVD_CMAKE_DIR}/${REL_INCLUDE_DIR}/ACVD/DiscreteRemeshing" )
-endif()
+#set( CONF_INCLUDE_DIRS
+#  "\${ACVD_CMAKE_DIR}/${REL_INCLUDE_DIR}/ACVD/Common"
+#)
+#if( BUILD_DISCRETEREMESHING )
+#  set( CONF_INCLUDE_DIRS "${CONF_INCLUDE_DIRS}" "\${ACVD_CMAKE_DIR}/${REL_INCLUDE_DIR}/ACVD/DiscreteRemeshing" )
+#endif()
 
-if( BUILD_VOLUMEPROCESSING )
-  set( CONF_INCLUDE_DIRS "${CONF_INCLUDE_DIRS}" "\${ACVD_CMAKE_DIR}/${REL_INCLUDE_DIR}/ACVD/VolumeProcessing" )
-endif()
+#if( BUILD_VOLUMEPROCESSING )
+#  set( CONF_INCLUDE_DIRS "${CONF_INCLUDE_DIRS}" "\${ACVD_CMAKE_DIR}/${REL_INCLUDE_DIR}/ACVD/VolumeProcessing" )
+#endif()
 
 configure_file( ${ACVD_SOURCE_DIR}/ACVDConfig.cmake.in
   ${ACVD_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/ACVDConfig.cmake
@@ -126,5 +132,6 @@ install( FILES
     "${ACVD_BINARY_DIR}/ACVDConfigVersion.cmake"
   DESTINATION ${INSTALL_CMAKE_DIR} COMPONENT dev
 )
+
 install(EXPORT ACVDTargets DESTINATION "${INSTALL_CMAKE_DIR}" COMPONENT dev)
 
diff --git a/Common/CMakeLists.txt b/Common/CMakeLists.txt
index 7b516a4..a4e6da1 100644
--- a/Common/CMakeLists.txt
+++ b/Common/CMakeLists.txt
@@ -30,6 +30,7 @@ install( TARGETS vtkSurface
   RUNTIME DESTINATION ${INSTALL_BIN_DIR}
   LIBRARY DESTINATION ${INSTALL_LIB_DIR}
   ARCHIVE DESTINATION ${INSTALL_LIB_DIR}
+  INCLUDES DESTINATION ${INSTALL_INCLUDE_DIR}/ACVD/Common
 )
 
 file( GLOB _vtkSurface_hdrs *.h )
diff --git a/Common/vtkCurvatureMeasure.cxx b/Common/vtkCurvatureMeasure.cxx
index 97f354b..20515e4 100644
--- a/Common/vtkCurvatureMeasure.cxx
+++ b/Common/vtkCurvatureMeasure.cxx
@@ -36,6 +36,7 @@ email                :
 
 #include "vtkCurvatureMeasure.h"
 #include "vtkNeighbourhoodComputation.h"
+#include "vtkVersionMacros.h"
 
 #define DISPLAYINTERVAL 10000
 
diff --git a/DiscreteRemeshing/CMakeLists.txt b/DiscreteRemeshing/CMakeLists.txt
index d129534..bd38407 100644
--- a/DiscreteRemeshing/CMakeLists.txt
+++ b/DiscreteRemeshing/CMakeLists.txt
@@ -8,26 +8,25 @@ mark_as_advanced(USE_MULTITHREADING)
 option(USE_LLOYDCLUSTERING "Use Lloyd relaxations instead of new algorithm for clustering" OFF)
 mark_as_advanced(USE_LLOYDCLUSTERING)
 
+ # --------------------------------------------------------------------------
+ # Library compilation
+add_library(
+vtkDiscreteRemeshing
+vtkTestUniformClustering.cxx
+vtkManifoldSimplification.cxx
+)
 
 # --------------------------------------------------------------------
 # Switch to enable Multithreaded clustering
 
 if(USE_MULTITHREADING)
-    add_definitions (-D DOmultithread)
+  target_compile_definitions(vtkDiscreteRemeshing PUBLIC DOmultithread)
 endif(USE_MULTITHREADING)
 if(USE_LLOYDCLUSTERING)
-    add_definitions (-D DOLloydClustering)
+  target_compile_definitions(vtkDiscreteRemeshing PUBLIC DOLloydClustering)
 endif(USE_LLOYDCLUSTERING)
 
 
- # --------------------------------------------------------------------------
- # Library compilation
-add_library(
-vtkDiscreteRemeshing
-vtkTestUniformClustering.cxx
-vtkManifoldSimplification.cxx
-)
-
 target_link_libraries(vtkDiscreteRemeshing vtkSurface)
 
 set_target_properties(vtkDiscreteRemeshing PROPERTIES
@@ -41,6 +40,7 @@ install( TARGETS vtkDiscreteRemeshing
   RUNTIME DESTINATION ${INSTALL_BIN_DIR}
   LIBRARY DESTINATION ${INSTALL_LIB_DIR}
   ARCHIVE DESTINATION ${INSTALL_LIB_DIR}
+  INCLUDES DESTINATION ${INSTALL_INCLUDE_DIR}/ACVD/DiscreteRemeshing
 )
 
 file( GLOB _vtkDiscreteRemeshing_hdrs *.h )
diff --git a/DiscreteRemeshing/vtkVerticesProcessing.h b/DiscreteRemeshing/vtkVerticesProcessing.h
index b0c9512..a653ddf 100644
--- a/DiscreteRemeshing/vtkVerticesProcessing.h
+++ b/DiscreteRemeshing/vtkVerticesProcessing.h
@@ -115,7 +115,7 @@ protected:
 
 	void AddItemRingToProcess(vtkIdType Item,int ProcessId)
 	{
-		int NumberOfEdges,*Edges,i;
+		vtkIdType NumberOfEdges,*Edges,i;
 		this->GetInput()->GetVertexNeighbourEdges(Item,NumberOfEdges,Edges);
 		for (i=0;i<NumberOfEdges;i++)
 			this->AddEdgeToProcess(Edges[i],ProcessId);
diff --git a/VolumeProcessing/CMakeLists.txt b/VolumeProcessing/CMakeLists.txt
index becd033..4d7a886 100644
--- a/VolumeProcessing/CMakeLists.txt
+++ b/VolumeProcessing/CMakeLists.txt
@@ -16,6 +16,7 @@ install( TARGETS vtkVolumeProcessing
   RUNTIME DESTINATION ${INSTALL_BIN_DIR}
   LIBRARY DESTINATION ${INSTALL_LIB_DIR}
   ARCHIVE DESTINATION ${INSTALL_LIB_DIR}
+  INCLUDES DESTINATION ${INSTALL_INCLUDE_DIR}/ACVD/VolumeProcessing
 )
 
 file( GLOB _vtkVolumeProcessing_hdrs *.h )
diff --git a/VolumeProcessing/vtkImageDataCleanLabels.h b/VolumeProcessing/vtkImageDataCleanLabels.h
index 5ea7331..e8225f8 100644
--- a/VolumeProcessing/vtkImageDataCleanLabels.h
+++ b/VolumeProcessing/vtkImageDataCleanLabels.h
@@ -2,7 +2,7 @@
 
 
 
-class vtkImageDataCleanLabels : public vtkSimpleImageToImageFilter
+class VTK_EXPORT vtkImageDataCleanLabels : public vtkSimpleImageToImageFilter
 {
 
 public :
