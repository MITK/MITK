cmake_minimum_required(VERSION 2.8.4)

project(GLEW)

set(${PROJECT_NAME}_MAJOR_VERSION 1)
set(${PROJECT_NAME}_MINOR_VERSION 10)
set(${PROJECT_NAME}_PATCH_VERSION 0)
set(${PROJECT_NAME}_VERSION ${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION}.${${PROJECT_NAME}_PATCH_VERSION})

find_package(OpenGL REQUIRED)

include_directories(${OPENGL_INCLUDE_DIR} ${GLEW_SOURCE_DIR}/include)
if(BUILD_SHARED_LIBS)
  add_definitions(-DGLEW_BUILD)
else()
  add_definitions(-DGLEW_STATIC)
endif()

add_library(glew src/glew.c)
target_link_libraries(glew ${OPENGL_gl_LIBRARY})
set_target_properties(glew PROPERTIES
                      SOVERSION ${${PROJECT_NAME}_VERSION})

# Config files
set(${PROJECT_NAME}_LIBRARIES glew)
set(${PROJECT_NAME}_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/include)

configure_file(${PROJECT_NAME}Config.cmake.in
               ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake @ONLY)
export(TARGETS ${${PROJECT_NAME}_LIBRARIES} FILE ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Exports.cmake)

# Version information
configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}ConfigVersion.cmake.in
  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
  @ONLY
  )
