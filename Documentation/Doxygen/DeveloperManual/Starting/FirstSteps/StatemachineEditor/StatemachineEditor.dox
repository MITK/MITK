/**
\page StatemachineEditor How to install and use the Statemachine-Editor

Available sections:
  - \ref StatemachineEditorOverview
  - \ref StatemachineEditorInstallation 
  - \ref StatemachineEditorManual
  - \ref StatemachineEditorManual1 
  - \ref StatemachineEditorManual2 
  - \ref StatemachineEditorManual3

\section StatemachineEditorOverview Overview

This plug-in for Eclipse allows you to create new statemachines and change existing statemachines in an graphical editor. You can open existing
statemachines from a xml file or create a new statemachine in a new xml file.

This document will tell you how to install the plug-in for eclipse and how to use it.

\section StatemachineEditorInstallation How to Install the Statemachine-Editor

First of all you have to install Eclipse (Eclipse Classic) and the plug-in Graphical Editing Framework (GEF). Furthermore we need the packages JDOM
(jdom.jar) and Java3D (vecmath.jar).

Caution: There have been problems reported with GEF runtime versions > 3.3.2. 
A known working configuration is:
Eclipse SDK: 3.3.1
J3D: 1.5.1
Jdom: 1.0
GEF runtime: 3.3.2 
Java Runtime Environment: jre6

Now you have to unzip the file StateMachines.zip into your eclipse folder. The file is located in your SVN checkout mitk/Modules/MitkExt/Interactions.

Start Eclipse and select "File" -> "Import...".

\image html Import.PNG "\b Fig.1: Import"

In the popup window (<b>Fig.1: Import</b>) select the folder "Plug-in Development" and "Plug-ins and Fragments". Click "Next >".

\image html Import2.PNG "\b Fig.2: Import Plug-ins and Fragments"

On the page "Import Plug-ins and Fragments" (<b> Fig.2: Import Plug-ins and Fragments</b>) just click "Next >".

\image html Import3.PNG "\b Fig.3: Selection"

On the page "Selection" (<b> Fig.3: Selection</b>) select the "StateMachines (1.0.0)" Plug-in and click the "Add ->" button.

\image html Import4.PNG "\b Fig.4: Selection 2"

Click "Finish" (<b> Fig.4: Selection 2</b>).

Now you have to make sure that the path to vecmath.jar and jdom.jar is set correctly.

\image html BuildPath.PNG "\b Fig.5: Set build path"

You can find the build path by selecting the project in the "Package Explorer" view. Then go to "Project" -> "Properties" -> "Java Build Path" in the tab
"Libraries" (as you can see in <B>Fig.5: Set build path</B>).

Now you should be able to start a Run-time Workbench.

\image html Runas.png "\b Fig.6: Start Run-time Workbench"

Therefore you have to press the "Run" button and select "Eclipse Application". Click "OK" (<b>Fig.6: Start Run-time Workbench</b>).

A new Eclipse workbench opens where we can use the Statemachine-Editor.


\section StatemachineEditorManual How to use the Statemachine-Editor

In the Eclipse Run-time Workbench we have to create a new Java project first (<B>Fig.7: Create a new Java project</B>).

\image html CreateJavaProject.PNG "\b Fig.7: Create a new Java project"

Then you can select one of the two buttons:

\li \ref StatemachineEditorManual1
\li \ref StatemachineEditorManual2


\subsection StatemachineEditorManual1 New Statemachines

When you press the button "New Statemachine" the following window will pop up:

\image html NewStatemachine.PNG "\b Fig.8: New Statemachine"

Here, you have to "Browse..." for your Java-Project as your file container (<B>Fig.8: New Statemachine</B>).

\image html NewStatemachine1.PNG "\b Fig.9: New Statemachine 1"

Select your Project and click "OK" (<B>Fig.9: New Statemachine 1</B>).

\image html NewStatemachine2.PNG "\b Fig.10: New Statemachine 2"

As soon as you have selected a container and a File name, the "Finish" button will become enabled (<B>Fig.10: New Statemachine 2</B>).

<B>Attention:</B> If the filename has already been used, you have to set another filename to enable the "Finish" button.

\image html NewStatemachine3.PNG "\b Fig.11: New Statemachine 3"

As a last step you have to enter the location and name for the xml file to be generated (<B>Fig.11: New Statemachine 3</B>). If you want to have predefined
events and actions, make sure the "mitkEventAndActionConstants.xml" file is in the same folder.


Read on in Section \ref StatemachineEditorManual3.


\subsection StatemachineEditorManual2 Statemachines from *.xml

When you press the button "Statemachines from *.xml" the following window will pop up:

\image html openstatemachinexml.png "\b Fig.12: Open Statemachine from *.xml"

Here you have to select the xml file, which contains the statemachines (<B>Fig.12: Open Statemachine from *.xml</B>). If you want to have predefined events
and actions, make sure the "mitkEventAndActionConstants.xml" file is in the same folder.

\image html specifycontainer.png "\b Fig.13: Select container"

Here, you have to "Browse..." for your Java-Project as your file container (<B>Fig.13: Select container</B>).

\image html specifycontainer2.png "\b Fig.14: Select container 1"

Select your Project and click "OK" (<B>Fig.14: Select container 1</B>).

\image html specifycontainer3.png "\b Fig.15: Select container 2"

As soon as you have selected a container, the "Finish" button will become enabled (<B>Fig.15: Select container 2</B>).


Read on in Section \ref StatemachineEditorManual3.


\subsection StatemachineEditorManual3 Work with the Editor

Now your workspace looks something like this:

\image html application.PNG "\b Fig.16: Workspace"

You can open a statemachine from the "Statemachines List" view (<B>Fig.16: Workspace</B>) by performing a double click on the statemachine.
An editor opens and on its palette you can find different tools, such as create state or create transition.

\image html openPropertiesView.PNG "\b Fig.17: Open the properties view"

\image html application1.PNG "\b Fig.18: Change statename in the properties view"

To edit the statename or state ID you have to open the "Properties" view (<B>Fig.18: Change statename in the properties view</B>). You will get it by
"Window"->"Show View" -> "Other..." -> "General" -> "Properties" (<B>Fig.17: Open the properties view</B>).

\image html changeEvent.PNG "\b Fig.19: Change Event"

\image html addAction.PNG "\b Fig.20: Add Action"

To change a transitions event or action you have to select the transition and open its context menu (<B>Fig.19: Change Event</B>, <B>Fig.20: Add Action</B>).
You can connect a transition to another state by drag one end of it and drop it to another state. All these changes are connected with an undo/redo 
controller.

When you save your statemachine it will be saved as an xml file which you either have created with your new statemachine or have opened before.

*/