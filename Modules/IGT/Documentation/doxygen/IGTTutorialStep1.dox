/**
\page IGTTutorialStep1 IGT filter pipeline

The IGT tutorial consists of four main parts for construction of a small navigation pipeline using a virtual tracking device.
The virtual tracking device produces random tool data (position and orientation) so no additional hardware is required.

\section sec1 In Tracking Layer

Firstly a new object "tracker" of the type mitk::VirtualTrackingDevice is created, then two tools, named "tool1" and "tool2",
are added to this "tracker". Since, the tracking device "tracker" is treated as a virtual tracking
device "tool1" and "tool2" are just added to the object by method AddTool(name).

\section sec2 In Navigation Layer

\imageMacro{IGTTutorialStep1.png,"",15.90}

Secondly, a new source of the type  mitk::TrackingDeviceSource has to be created with outputs for each single tool of a tracker.
The source sets the following tracking device by using method SetTrackingDevice as shown below
\code
source->SetTrackingDevice(tracker);
\endcode
So now, the source is initialized with the virtual tracking device. Next, the source is connected and tracking is started.

In part II, a displacemt filter (object "displacer") is constructed to change the positions of the filtered NavigationData objects
with an offset for each direction (X,Y,Z). The given filter has inputs and outputs for each tool, in this example we have 2 tools, hence there exists two inputs and outputs. Every output of the displacement filter object is connected to the recorder object in the next part.

In part III, all the NavigationData is recorded with the NavigationDataRecorder. In order to record, we simply create
an object "recorder" of the type mitk::NavigationDataRecorder and set the appropriate file to it. Now the displacer object is connected to the
recorder object for every output by using a for-loop in the code, the method StartRecording() is called on the next line. Afterwards,
the recorder has to be updated a couple of times. In this example the recorder is updating 100 times through
the second for-loop statement in part III. This can also be seen as a simulation of a timer by using a for-loop.

Part IV explains how the recoded file can be played for further use. After the object "player" of a type mitk::NavigationDataPlayer
is created, the required file has to be set to the player and playing has to be started.  Here, there exists a new pipeline which functions by reading
the recorded file from the harddisc and plays it by using the player as source. During the play, the for-loop makes the file update as in part III.

\imageMacro{IGTTutorialStep1-2.png,"",9.53}

The full code of small navigation pipeline is shown below and can be found in MITK-Source/Modules/IGT/Tutorial/mitkIGTTutorialStep1.cpp.
This tutorial is an extra target which can be build separately.

\include mitkIGTTutorialStep1.cpp

\ref IGTTutorialStep2 "[Next step]" \ref IGTTutorialOverview "[IGT Tutorial Overview]"

*/
